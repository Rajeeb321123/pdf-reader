// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  // we are giving id not default like we we did before because we are using kinde for authentication and id came from kinde 
  id    String @id @unique //same id as kinde user id
  email String @unique

  // for linking to other model
  File    File[]
  Message Message[]

  // map because they are generated by stripe not by us
  stripeCustomerId       String?   @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId   String?   @unique @map(name: "stripe_subscription_id")
  stripePriceId          String?   @map(name: "stripe_price_id")
  // for how long user has left for his premium
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period")
}

enum UploadStatus {
  PENDING
  PROCESSING
  FAILED
  SUCCESS
}

// model for files
model File {
  id   String @id @default(cuid())
  name String

  uploadStatus UploadStatus @default(PENDING)

  url String
  key String

  // for linking to other model
  message Message[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // below code is autogenerted by formating documnet the like in other file we always do, but we need file File[] in user model
  User   User?   @relation(fields: [userId], references: [id])
  userId String?
}

model Message {
  id   String @id @default(cuid())
  text String @db.Text()

  // user and userId will be automatically allocated by prisma after linking

  //for knowing message is from ai or user
  isUserMessage Boolean

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  User   User?   @relation(fields: [userId], references: [id])
  userId String?
  File   File?   @relation(fields: [fileId], references: [id])
  fileId String?
}
